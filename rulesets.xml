<?xml version="1.0"?>
<ruleset name="PHP Mess Detector Regeln für Shopware"
        xmlns="http://pmd.sf.net/ruleset/1.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
        xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
    <description>
        Hier werden die Regeln für den Mess Detector festgelegt.
        Einen Ruleset-Builder findet man unter https://andrewmackrodt.github.io/phpmd-ruleset-builder

        Es können für die einzelnen Regeln eigene Eigenschaften definiert werden.
        Hier mal am Beispiel Methodenlänge:
            <!-- <rule ref="rulesets/codesize.xml/ExcessiveMethodLength">
                <properties>
                    <property name="minimum" value="150" />
                </properties>
            </rule> -->

        Die Warnungen können aber auch direkt an den Methoden deaktiviert werden.
        Zum Beispiel:
        <!--
            /**
            * @SuppressWarnings(PHPMD.ExcessiveMethodLength)
            */
        -->

    Der Value bedeutet, dass ab dem Schwellenwert von 150 Zeilen, PHPMD eine Warnung ausgibt.
    Eine Übersicht der Regeln findet man unter https://phpmd.org/rules/index.html,
    oder über den oben genannten Ruleset-Builder.
</description>
    <include-pattern>some/excluded/files</include-pattern>

    <rule ref="rulesets/cleancode.xml/BooleanArgumentFlag" />
    <rule ref="rulesets/cleancode.xml/ElseExpression" />
    <rule ref="rulesets/codesize.xml/CyclomaticComplexity" />
    <rule ref="rulesets/codesize.xml/NPathComplexity" />
    <rule ref="rulesets/codesize.xml/ExcessiveMethodLength">
        <properties>
            <property name="minimum" value="150" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/ExcessiveClassLength" />
    <rule ref="rulesets/codesize.xml/ExcessiveParameterList">
        <properties>
            <property name="minimum" value="15" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/ExcessivePublicCount">
        <properties>
            <property name="minimum" value="65" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/TooManyFields">
        <properties>
            <property name="maxfields" value="65" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/TooManyMethods">
        <properties>
            <property name="maxmethods" value="65" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/TooManyPublicMethods">
        <properties>
            <property name="maxmethods" value="65" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/ExcessiveClassComplexity">
        <properties>
            <property name="maximum" value="65" />
        </properties>
    </rule>
    <rule ref="rulesets/controversial.xml/CamelCaseClassName" />
    <rule ref="rulesets/controversial.xml/CamelCasePropertyName" />
    <rule ref="rulesets/controversial.xml/CamelCaseMethodName" />
    <rule ref="rulesets/controversial.xml/CamelCaseParameterName" />
    <rule ref="rulesets/controversial.xml/CamelCaseVariableName" />
    <rule ref="rulesets/design.xml/ExitExpression" />
    <rule ref="rulesets/design.xml/EvalExpression" />
    <rule ref="rulesets/design.xml/GotoStatement" />
    <rule ref="rulesets/design.xml/NumberOfChildren" />
    <rule ref="rulesets/design.xml/DepthOfInheritance" />
    <rule ref="rulesets/design.xml/CouplingBetweenObjects" />
    <rule ref="rulesets/design.xml/DevelopmentCodeFragment">
        <properties>
            <property name="unwanted-functions" value="dd,var_dump,print_r,debug_zval_dump,debug_print_backtrace" />
        </properties>
    </rule>
    <rule ref="rulesets/naming.xml/ShortVariable">
        <properties>
            <property name="exceptions" value="id,to,i,no" />
        </properties>
    </rule>
    <rule ref="rulesets/naming.xml/LongVariable">
        <properties>
            <property name="maximum" value="30" />
        </properties>
    </rule>
    <rule ref="rulesets/naming.xml/ShortMethodName" />
    <rule ref="rulesets/naming.xml/ConstructorWithNameAsEnclosingClass" />
    <rule ref="rulesets/naming.xml/ConstantNamingConventions" />
    <rule ref="rulesets/naming.xml/BooleanGetMethodName" />
    <rule ref="rulesets/unusedcode.xml/UnusedLocalVariable" />
    <rule ref="rulesets/unusedcode.xml/UnusedPrivateMethod" />
    <rule ref="rulesets/unusedcode.xml/UnusedFormalParameter">
        <priority>5</priority>
    </rule>
</ruleset>
